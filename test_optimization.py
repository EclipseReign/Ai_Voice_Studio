#!/usr/bin/env python3
"""Simple test to verify audio generation optimization"""
import time
import requests
import json
import sys

API = "http://localhost:8001/api"

# Medium test text (~2000 chars = ~3-4 segments with 1500 char limit)
test_text = """
–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –æ–¥–Ω—É –∏–∑ —Å–∞–º—ã—Ö –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏—Ö –æ–±–ª–∞—Å—Ç–µ–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–∞—É–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π. 
–ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è –ò–ò –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Å–µ—Ä–µ–¥–∏–Ω—ã –¥–≤–∞–¥—Ü–∞—Ç–æ–≥–æ –≤–µ–∫–∞, –∫–æ–≥–¥–∞ —É—á–µ–Ω—ã–µ –≤–ø–µ—Ä–≤—ã–µ –∑–∞–¥—É–º–∞–ª–∏—Å—å –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∞—à–∏–Ω, 
—Å–ø–æ—Å–æ–±–Ω—ã—Ö –º—ã—Å–ª–∏—Ç—å. –ü–µ—Ä–≤—ã–µ —à–∞–≥–∏ –≤ —ç—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –±—ã–ª–∏ —Å–¥–µ–ª–∞–Ω—ã –≤ 1950-—Ö –≥–æ–¥–∞—Ö, –∫–æ–≥–¥–∞ –ê–ª–∞–Ω –¢—å—é—Ä–∏–Ω–≥ –ø—Ä–µ–¥–ª–æ–∂–∏–ª 
—Å–≤–æ–π –∑–Ω–∞–º–µ–Ω–∏—Ç—ã–π —Ç–µ—Å—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞–∑—É–º–Ω–æ—Å—Ç–∏ –º–∞—à–∏–Ω—ã.

–í –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–¥—Ö–æ–¥–æ–≤ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞. 
–°–∏–º–≤–æ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã, —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ —Å—Ç–∞–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π. –ö–∞–∂–¥—ã–π –∏–∑ 
—ç—Ç–∏—Ö –ø–æ–¥—Ö–æ–¥–æ–≤ –∏–º–µ–ª —Å–≤–æ–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, –Ω–æ –≤—Å–µ –æ–Ω–∏ –≤–Ω–µ—Å–ª–∏ –≤–∞–∂–Ω—ã–π –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ –æ–±–ª–∞—Å—Ç–∏.

–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç—Ç–∞–ø —Ä–∞–∑–≤–∏—Ç–∏—è –ò–ò –Ω–∞—á–∞–ª—Å—è —Å –ø–æ—è–≤–ª–µ–Ω–∏–µ–º –≥–ª—É–±–æ–∫–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –≠—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø–æ–∑–≤–æ–ª–∏–ª–∏ 
—Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—ã, —Å–ø–æ—Å–æ–±–Ω—ã–µ —Ä–µ—à–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤, –æ–±—Ä–∞–±–æ—Ç–∫–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –∏ –ø—Ä–∏–Ω—è—Ç–∏—è 
—Ä–µ—à–µ–Ω–∏–π. –°–µ–≥–æ–¥–Ω—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö –æ–±–ª–∞—Å—Ç—è—Ö: –æ—Ç –º–µ–¥–∏—Ü–∏–Ω—ã –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –¥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ 
–∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π.

–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ —Å—Ç–∞–ª–æ –∫–ª—é—á–µ–≤–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ò–ò. –ê–ª–≥–æ—Ä–∏—Ç–º—ã –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –ø–æ–∑–≤–æ–ª—è—é—Ç 
–∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º —É—á–∏—Ç—å—Å—è –Ω–∞ –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ —è–≤–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –ì–ª—É–±–æ–∫–∏–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏, –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π 
—á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –º–æ–∑–≥–∞, –ø–æ–∫–∞–∑–∞–ª–∏ –≤—ã–¥–∞—é—â–∏–µ—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –ø–æ–Ω–∏–º–∞–Ω–∏–∏ —Ä–µ—á–∏ –∏ –∏–≥—Ä–µ –≤ —Å–ª–æ–∂–Ω—ã–µ 
—Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ –∏–≥—Ä—ã. –≠—Ç–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –æ—Ç–∫—Ä—ã–ª–∏ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ò–ò –≤ —Ä–µ–∞–ª—å–Ω–æ–º –º–∏—Ä–µ.

–ë—É–¥—É—â–µ–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –æ–±–µ—â–∞–µ—Ç –±—ã—Ç—å –µ—â–µ –±–æ–ª–µ–µ –≤–ø–µ—á–∞—Ç–ª—è—é—â–∏–º. –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º 
–±–æ–ª–µ–µ –º–æ—â–Ω—ã—Ö –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–º–æ–≥—É—Ç —Ä–µ—à–∞—Ç—å –≤—Å–µ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏. –í–∞–∂–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º 
—è–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ä—è—Å–Ω–∏–º–æ–≥–æ –ò–ò, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è, –Ω–æ –∏ –æ–±—ä—è—Å–Ω—è—Ç—å –∏—Ö —á–µ–ª–æ–≤–µ–∫—É.
""".strip()

print("=" * 70)
print("–¢–ï–°–¢ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò –ì–ï–ù–ï–†–ê–¶–ò–ò –ê–£–î–ò–û")
print("=" * 70)
print(f"–†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞: {len(test_text)} —Å–∏–º–≤–æ–ª–æ–≤")
print(f"–û–∂–∏–¥–∞–µ–º—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã: ~{(len(test_text) // 1500) + 1}")
print(f"–ü—Ä–∏–º–µ—Ä–Ω–∞—è –¥–ª–∏–Ω–∞ –∞—É–¥–∏–æ: ~{len(test_text) / 300:.1f} –º–∏–Ω—É—Ç")
print("=" * 70)

start_time = time.time()
url = f"{API}/audio/synthesize-with-progress"
params = {
    'text': test_text,
    'voice': 'ru_RU-irina-medium',
    'rate': 1.0,
    'language': 'ru-RU'
}

try:
    response = requests.get(url, params=params, stream=True, timeout=120)
    
    if response.status_code == 200:
        segments_count = 0
        progress_updates = []
        
        for line in response.iter_lines():
            if line:
                line_str = line.decode('utf-8')
                if line_str.startswith('data: '):
                    try:
                        data = json.loads(line_str[6:])
                        msg_type = data.get('type', '')
                        progress = data.get('progress', 0)
                        message = data.get('message', '')
                        elapsed = time.time() - start_time
                        
                        if msg_type == 'info':
                            print(f"[{elapsed:5.1f}s] üìù {message}")
                            if '—Å–µ–≥–º–µ–Ω—Ç–æ–≤' in message:
                                import re
                                match = re.search(r'(\d+) —Å–µ–≥–º–µ–Ω—Ç–æ–≤', message)
                                if match:
                                    segments_count = int(match.group(1))
                        elif msg_type == 'progress':
                            progress_updates.append((elapsed, progress, message))
                            print(f"[{elapsed:5.1f}s] ‚öôÔ∏è  {message} - {progress}%")
                        elif msg_type == 'complete':
                            total_time = time.time() - start_time
                            print(f"\n{'='*70}")
                            print(f"‚úÖ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û!")
                            print(f"{'='*70}")
                            print(f"‚è±Ô∏è  –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {total_time:.1f} —Å–µ–∫—É–Ω–¥")
                            print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤: {segments_count}")
                            print(f"üìè –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞: {len(test_text)} —Å–∏–º–≤–æ–ª–æ–≤")
                            print(f"üéµ –ü—Ä–∏–º–µ—Ä–Ω–∞—è –¥–ª–∏–Ω–∞ –∞—É–¥–∏–æ: ~{len(test_text)/300:.1f} –º–∏–Ω—É—Ç")
                            print(f"‚ö° –°–∫–æ—Ä–æ—Å—Ç—å: {len(test_text)/total_time:.0f} —Å–∏–º–≤–æ–ª–æ–≤/—Å–µ–∫")
                            
                            # Calculate ratio
                            audio_minutes = len(test_text) / 300
                            gen_minutes = total_time / 60
                            ratio = audio_minutes / gen_minutes if gen_minutes > 0 else 0
                            print(f"üöÄ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {ratio:.1f}x —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏")
                            print(f"   (–≥–µ–Ω–µ—Ä–∞—Ü–∏—è {audio_minutes:.1f} –º–∏–Ω –∞—É–¥–∏–æ –∑–∞ {gen_minutes:.2f} –º–∏–Ω)")
                            print(f"{'='*70}")
                            sys.exit(0)
                        elif msg_type == 'error':
                            print(f"‚ùå –û–®–ò–ë–ö–ê: {data.get('message')}")
                            sys.exit(1)
                    except json.JSONDecodeError:
                        pass
    else:
        print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
        print(response.text[:500])
        sys.exit(1)

except Exception as e:
    print(f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)
